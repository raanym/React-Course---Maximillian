[{"/home/raaneem/reactMax/5useReducerProject/src/index.js":"1","/home/raaneem/reactMax/5useReducerProject/src/App.js":"2","/home/raaneem/reactMax/5useReducerProject/src/components/MainHeader/MainHeader.js":"3","/home/raaneem/reactMax/5useReducerProject/src/components/Home/Home.js":"4","/home/raaneem/reactMax/5useReducerProject/src/components/Login/Login.js":"5","/home/raaneem/reactMax/5useReducerProject/src/components/MainHeader/Navigation.js":"6","/home/raaneem/reactMax/5useReducerProject/src/components/UI/Button/Button.js":"7","/home/raaneem/reactMax/5useReducerProject/src/components/UI/Card/Card.js":"8"},{"size":169,"mtime":1616593928000,"results":"9","hashOfConfig":"10"},{"size":1093,"mtime":1616593928000,"results":"11","hashOfConfig":"10"},{"size":368,"mtime":1616593928000,"results":"12","hashOfConfig":"10"},{"size":250,"mtime":1616593928000,"results":"13","hashOfConfig":"10"},{"size":4068,"mtime":1631530071790,"results":"14","hashOfConfig":"10"},{"size":571,"mtime":1616593928000,"results":"15","hashOfConfig":"10"},{"size":353,"mtime":1616593928000,"results":"16","hashOfConfig":"10"},{"size":218,"mtime":1616593928000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"qkhkmh",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/raaneem/reactMax/5useReducerProject/src/index.js",[],["36","37"],"/home/raaneem/reactMax/5useReducerProject/src/App.js",[],"/home/raaneem/reactMax/5useReducerProject/src/components/MainHeader/MainHeader.js",[],"/home/raaneem/reactMax/5useReducerProject/src/components/Home/Home.js",[],"/home/raaneem/reactMax/5useReducerProject/src/components/Login/Login.js",["38"],"import React, { useState, useEffect, useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst emailReducer = (state, action) => {\n\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    }\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    }\n  }\n\n  return {\n    value: '',\n    isValid: false\n  }\n};\n\nconst pwdReducer = (state, action) => {\n\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    }\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    }\n  }\n\n  return {\n    value: '',\n    isValid: false\n  }\n}\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: false\n  });\n\n  const [pwdState, dispatchPwd] = useReducer(pwdReducer, {\n    value: '',\n    isValid: false,\n  });\n\n  const [formIsValid, dispatchFormIsValid] = useReducer(formReducer, {\n\n  })\n\n  // useEffect(() => {\n  //   console.log('EFFECT RUNNING');\n\n  //   return () => {\n  //     console.log('EFFECT CLEANUP');\n  //   };\n  // }, []);\n\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: pwdIsValid } = pwdState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('Checking form validity!');\n      setFormIsValid(\n        emailIsValid && pwdIsValid\n      );\n    }, 500);\n\n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, pwdIsValid]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n\n    setFormIsValid(\n      event.target.value.includes('@') && pwdState.isValid\n    );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPwd({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n\n    // setFormIsValid(\n    //   emailState.isValid && event.target.value.trim().length > 6\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR',\n    });\n    // setEmailIsValid(emailState.isValid));\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPwd({\n      type: 'INPUT_BLUR'\n    });\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, pwdState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${emailState.isValid === false ? classes.invalid : ''\n            }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${pwdState.isValid === false ? classes.invalid : ''\n            }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={pwdState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n","/home/raaneem/reactMax/5useReducerProject/src/components/MainHeader/Navigation.js",[],"/home/raaneem/reactMax/5useReducerProject/src/components/UI/Button/Button.js",[],"/home/raaneem/reactMax/5useReducerProject/src/components/UI/Card/Card.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":null,"fatal":true,"severity":2,"message":"43","line":68,"column":10},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"Parsing error: Identifier 'formIsValid' has already been declared.\n\n\u001b[0m \u001b[90m 66 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 67 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 68 |\u001b[39m   \u001b[36mconst\u001b[39m [formIsValid\u001b[33m,\u001b[39m dispatchFormIsValid] \u001b[33m=\u001b[39m useReducer(formReducer\u001b[33m,\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 69 |\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 70 |\u001b[39m   })\u001b[0m\n\u001b[0m \u001b[90m 71 |\u001b[39m\u001b[0m","no-global-assign","no-unsafe-negation"]