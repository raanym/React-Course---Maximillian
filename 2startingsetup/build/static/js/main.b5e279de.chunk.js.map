{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expense.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseFilter","value","selected","onChange","e","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expense","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","data","Date","onSaveExpenseData","preventDefault","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","expenseData","random","onAddExpense","dummyData","App","setExpenses","prevState","ReactDOM","render","document","getElementById"],"mappings":"4ZASeA,MAPf,SAAcC,GACZ,IAAMC,EAAU,QAAUD,EAAME,UAChC,OACE,qBAAKA,UAAWD,EAAhB,SAA0BD,EAAMG,YCiBrBC,G,MApBO,SAACJ,GAKrB,OACE,qBAAKE,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQG,MAAOL,EAAMM,SAAUC,SARP,SAACC,GAC7BR,EAAMS,eAAeD,EAAEE,OAAOL,QAO1B,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4BCCKM,G,MAdK,SAACX,GACnB,IAAMY,EAAQZ,EAAMa,KAAKC,eAAe,QAAS,CAAEF,MAAO,SACpDG,EAAMf,EAAMa,KAAKC,eAAe,QAAS,CAAEC,IAAK,YAChDC,EAAOhB,EAAMa,KAAKI,cAExB,OACE,sBAAKf,UAAU,eAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsCU,IACtC,qBAAKV,UAAU,qBAAf,SAAqCc,IACrC,qBAAKd,UAAU,oBAAf,SAAoCa,SCQ3BG,G,MAfK,SAAClB,GAEnB,OACE,6BACE,eAAC,EAAD,CAAME,UAAU,eAAhB,UACE,cAAC,EAAD,CAAaW,KAAMb,EAAMa,OACzB,sBAAKX,UAAU,4BAAf,UACE,6BAAKF,EAAMmB,QACX,sBAAKjB,UAAU,sBAAf,UAAsCF,EAAMoB,OAA5C,iBCUKC,G,MAnBM,SAACrB,GAEpB,OAA2B,IAAvBA,EAAMsB,MAAMC,OACP,oBAAIrB,UAAU,0BAAd,+BAIP,oBAAIA,UAAU,gBAAd,SACGF,EAAMsB,MAAME,KAAI,SAAAC,GACf,OAAO,cAAC,EAAD,CAELN,MAAOM,EAAQN,MACfC,OAAQK,EAAQL,OAChBP,KAAMY,EAAQZ,MAHTY,EAAQC,W,OCORC,G,MAjBE,SAAC3B,GAChB,IAAI4B,EAAgB,KAMpB,OAJI5B,EAAM6B,SAAW,IACnBD,EAAgBE,KAAKC,MAAO/B,EAAMK,MAAQL,EAAM6B,SAAY,KAAO,KAInE,sBAAK3B,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,kBAAkB8B,MAAO,CAAEC,OAAQL,OAEpD,qBAAK1B,UAAU,mBAAf,SAAmCF,EAAMkC,aCChCC,G,MAZD,SAACnC,GAEb,IAAMoC,EAAkBpC,EAAMqC,WAAWb,KAAI,SAAAc,GAAS,OAAIA,EAAUjC,SAC9DkC,EAAeT,KAAKU,IAAL,MAAAV,KAAI,YAAQM,IAEjC,OACE,qBAAKlC,UAAU,QAAf,SACGF,EAAMqC,WAAWb,KAAI,SAAAc,GAAS,OAAI,cAAC,EAAD,CAAUjC,MAAOiC,EAAUjC,MAAOwB,SAAUU,EAAcL,MAAOI,EAAUJ,OAAYI,EAAUJ,cCkB3HO,EA1BO,SAACzC,GACrB,IAD+B,EACzB0C,EAAkB,CACtB,CAAER,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,GACvB,CAAE6B,MAAO,MAAO7B,MAAO,IAbM,cAgBTL,EAAM2C,UAhBG,IAgB/B,2BAAsC,CAAC,IAA5BlB,EAA2B,QAEpCiB,EADcjB,EAAQZ,KAAK+B,YACJvC,OAASoB,EAAQL,QAlBX,8BAqB/B,OACE,cAAC,EAAD,CAAOiB,WAAYK,KCeRG,G,MAhCC,SAAC7C,GACf,MAAwC8C,mBAAS,QAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAMMC,EAAmBjD,EAAMsB,MAAM4B,QAAO,SAAAzB,GAC1C,OAAOA,EAAQZ,KAAKI,cAAckC,aAAeJ,KAInD,OACE,eAAC,EAAD,CAAM7C,UAAU,WAAhB,UACE,cAAC,EAAD,CAAeI,SAAUyC,EAActC,eAXf,SAAC2C,GAC3BJ,EAAgBI,MAWd,cAAC,EAAD,CAAeT,SAAUM,IACzB,cAAC,EAAD,CAAc3B,MAAO2B,S,OCyEZI,G,MA7FK,SAACrD,GACnB,MAAwC8C,mBAAS,IAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KACA,EAA0CT,mBAAS,IAAnD,mBAAOU,EAAP,KAAsBC,EAAtB,KACA,EAAsCX,mBAAS,IAA/C,mBAAOY,EAAP,KAAoBC,EAApB,KAkEA,OACE,uBAAMC,SAnBc,SAACpD,GACrB,IAAMqD,EAAO,CACX1C,MAAOmC,EACPlC,QAASoC,EACT3C,KAAM,IAAIiD,KAAKJ,IAGjBH,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,IAEf3D,EAAM+D,kBAAkBF,GAExBrD,EAAEwD,kBAMF,UACE,sBAAK9D,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,0CACA,uBAAO+D,KAAK,OAAO5D,MAAOiD,EAAc/C,SA/DrB,SAACC,GAC1B+C,EAAgB/C,EAAEE,OAAOL,aAgErB,sBAAKH,UAAU,uBAAf,UACE,2CACA,uBAAO+D,KAAK,SAAS5D,MAAOmD,EAAeU,IAAI,OAAOC,KAAK,OAAO5D,SAjD9C,SAACC,GAC3BiD,EAAiBjD,EAAEE,OAAOL,aAkDtB,sBAAKH,UAAU,uBAAf,UACE,yCACA,uBAAO+D,KAAK,OAAO5D,MAAOqD,EAAaQ,IAAI,aAAa1B,IAAI,aAAajC,SA1CvD,SAACC,GACzBmD,EAAenD,EAAEE,OAAOL,gBA4CtB,sBAAKH,UAAU,uBAAf,UACE,wBAAQ+D,KAAK,SAASG,QAASpE,EAAMqE,SAArC,oBACA,wBAAQJ,KAAK,SAAb,iCChDOK,G,MAtCI,SAACtE,GAElB,MAAkC8C,oBAAS,GAA3C,mBAAOyB,EAAP,KAAkBC,EAAlB,KAwBA,OACE,sBAAKtE,UAAU,cAAf,WACIqE,GACA,wBAAQH,QAbS,WACrBI,GAAa,IAYT,0BACDD,GACC,cAAC,EAAD,CAAaR,kBA1BY,SAACU,GAG9B,IAAMC,EAAW,aACfhD,GAAII,KAAK6C,SAASxB,YACfsB,GAGLzE,EAAM4E,aAAaF,IAmBbL,SAZW,WACjBG,GAAa,WCrBXK,EAAY,CAChB,CAAEnD,GAAI,KAAMP,MAAO,gBAAiBC,OAAQ,IAAKP,KAAM,IAAIiD,KAAK,KAAM,EAAG,IACzE,CAAEpC,GAAI,KAAMP,MAAO,aAAcC,OAAQ,IAAKP,KAAM,IAAIiD,KAAK,KAAM,EAAG,IACtE,CAAEpC,GAAI,KAAMP,MAAO,uBAAwBC,OAAQ,IAAKP,KAAM,IAAIiD,KAAK,KAAM,EAAG,IAChF,CAAEpC,GAAI,KAAMP,MAAO,4BAA6BC,OAAQ,GAAIP,KAAM,IAAIiD,KAAK,KAAM,EAAG,IACpF,CAAEpC,GAAI,KAAMP,MAAO,iBAAkBC,OAAQ,IAAKP,KAAM,IAAIiD,KAAK,KAAM,EAAG,KAsB7DgB,EAnBH,WACV,MAAgChC,mBAAS+B,GAAzC,mBAAOlC,EAAP,KAAiBoC,EAAjB,KAUA,OACE,gCACE,cAAC,EAAD,CAAYH,aAVU,SAAAnD,GACxBsD,GAAY,SAACC,GACX,MAAM,CAAEvD,GAAR,mBAAoBuD,UASpB,cAAC,EAAD,CAAS1D,MAAOqB,QCtBtBsC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b5e279de.chunk.js","sourcesContent":["import './Card.css'\n\nfunction Card(props) {\n  const classes = 'card ' + props.className;\n  return (\n    <div className={classes}>{props.children}</div>\n  );\n}\n\nexport default Card;","import './ExpenseFilter.css';\n\nconst ExpenseFilter = (props) => {\n  const dropDownChangeHandler = (e) => {\n    props.onChangeFilter(e.target.value);\n  }\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropDownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n}\n\nexport default ExpenseFilter;","import './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString('en-us', { month: 'long' });\n  const day = props.date.toLocaleString('en-us', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='expense-date__day'>{day}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;","import Card from '../UI/Card'\nimport ExpenseDate from './ExpenseDate';\nimport './ExpenseItem.css'\n\nconst ExpenseItem = (props) => {\n\n  return (\n    <li>\n      <Card className='expense-item'>\n        <ExpenseDate date={props.date} />\n        <div className='expense-item__description'>\n          <h2>{props.title}</h2>\n          <div className='expense-item__price'>{props.amount}$</div>\n        </div>\n      </Card>\n    </li>\n  );\n}\n\nexport default ExpenseItem;","import ExpenseItem from './ExpenseItem'\nimport './ExpensesList.css'\n\nconst ExpensesList = (props) => {\n\n  if (props.items.length === 0) {\n    return <h2 className='expenses-list__fallback'>Found no expenses</h2>;\n  }\n\n  return (\n    <ul className='expenses-list'>\n      {props.items.map(expense => {\n        return <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      })}\n    </ul>\n  )\n}\nexport default ExpensesList;","\nimport './ChartBar.css';\n\nconst ChartBar = (props) => {\n  let barFillHeight = '0%';\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n  }\n\n  return (\n    <div className='chart-bar'>\n      <div className='chart-bar__inner'>\n        <div className='chart-bar__fill' style={{ height: barFillHeight }}></div>\n      </div>\n      <div className='chart-bar__label'>{props.label}</div>\n    </div>\n  )\n}\n\nexport default ChartBar;","\nimport ChartBar from './ChartBar';\nimport './Chart.css';\n\nconst Chart = (props) => {\n\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className='chart'>\n      {props.dataPoints.map(dataPoint => <ChartBar value={dataPoint.value} maxValue={totalMaximum} label={dataPoint.label} key={dataPoint.label} />)}\n    </div>\n  )\n}\n\nexport default Chart;","\nimport Chart from '../Chart/Chart'\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: 'Jan', value: 0, },\n    { label: 'Feb', value: 0, },\n    { label: 'Mar', value: 0, },\n    { label: 'Apr', value: 0, },\n    { label: 'May', value: 0, },\n    { label: 'Jun', value: 0, },\n    { label: 'Jul', value: 0, },\n    { label: 'Aug', value: 0, },\n    { label: 'Sep', value: 0, },\n    { label: 'Oct', value: 0, },\n    { label: 'Nov', value: 0, },\n    { label: 'Dec', value: 0, }\n  ]\n\n  for (const expense of props.expenses) {\n    const month = expense.date.getMonth();\n    chartDataPoints[month].value += expense.amount;\n  }\n\n  return (\n    <Chart dataPoints={chartDataPoints} />\n  )\n}\n\nexport default ExpensesChart;","import { useState } from 'react';\n\nimport Card from '../UI/Card';\nimport ExpenseFilter from './ExpenseFilter';\nimport ExpensesList from './ExpensesList';\nimport ExpensesChart from './ExpensesChart';\nimport './Expense.css';\n\nconst Expense = (props) => {\n  const [filteredYear, setFilteredYear] = useState('2020');\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  }\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n\n  return (\n    <Card className='expenses' >\n      <ExpenseFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\n      <ExpensesChart expenses={filteredExpenses} />\n      <ExpensesList items={filteredExpenses} />\n    </Card >\n  );\n}\n\n// {filteredExpenses.length === 0\n//   ? <p>No expenses found</p>\n//   : filteredExpenses.map(expense => {\n//     return <ExpenseItem\n//       key={expense.id}\n//       title={expense.title}\n//       amount={expense.amount}\n//       date={expense.date}\n//     />\n//   })}\n\nexport default Expense;","import { useState } from 'react';\n\nimport './ExpenseForm.css'\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: '',\n  //   enteredAmount: '',\n  //   enteredDate: ''\n  // });\n\n  const titleChangeHandler = (e) => {\n    setEnteredTitle(e.target.value);\n\n\n\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: e.target.value\n    // });\n\n    // setUserInput((prevState) => {\n    //   return {\n    //     ...prevState,\n    //     enteredTitle: e.target.value\n    //   }\n    // });\n  }\n\n  const amountChangeHandler = (e) => {\n    setEnteredAmount(e.target.value);\n\n    // setUserInput((prevState) => {\n    //   return {\n    //     ...prevState,\n    //     enteredAmount: e.target.value\n    //   }\n    // });\n  }\n\n  const dateChangeHandler = (e) => {\n    setEnteredDate(e.target.value);\n\n    // setUserInput((prevState) => {\n    //   return {\n    //     ...prevState,\n    //     enteredDate: e.target.value\n    //   }\n    // });\n  }\n\n  const submitHandler = (e) => {\n    const data = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate)\n    }\n\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n\n    props.onSaveExpenseData(data);\n\n    e.preventDefault();\n  }\n\n\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='new-expense__controls'>\n        <div className='new-expense__control'>\n          <label>Title</label>\n          <input type='text' value={enteredTitle} onChange={titleChangeHandler} />\n        </div>\n        <div className='new-expense__control'>\n          <label>Amount</label>\n          <input type='number' value={enteredAmount} min='0.01' step='0.01' onChange={amountChangeHandler} />\n        </div>\n        <div className='new-expense__control'>\n          <label>Date</label>\n          <input type='date' value={enteredDate} min='2019-01-01' max='2022-12-31' onChange={dateChangeHandler} />\n        </div>\n      </div>\n      <div className='new-expense__actions'>\n        <button type='submit' onClick={props.onCancel}>Cancel</button>\n        <button type='submit'>Add Expense</button>\n      </div>\n    </form>\n  );\n}\n\nexport default ExpenseForm;","import { useState } from 'react';\n\nimport ExpenseForm from './ExpenseForm'\nimport './NewExpense.css';\n\nconst NewExpense = (props) => {\n\n  const [isEditing, setIsEditing] = useState(false);\n\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n\n\n    const expenseData = {\n      id: Math.random().toString(),\n      ...enteredExpenseData\n    };\n\n    props.onAddExpense(expenseData);\n  }\n\n  const setEditHandler = () => {\n    setIsEditing(true);\n  }\n\n  const cancelForm = () => {\n    setIsEditing(false);\n  }\n\n\n\n  return (\n    <div className='new-expense'>\n      {!isEditing &&\n        <button onClick={setEditHandler}>Add Expenses</button>}\n      {isEditing &&\n        <ExpenseForm onSaveExpenseData={saveExpenseDataHandler}\n          onCancel={cancelForm}\n        />}\n    </div>\n  );\n}\n\nexport default NewExpense;","import { useState } from 'react';\n\nimport Expense from './components/Expenses/Expense'\nimport NewExpense from './components/NewExpense/NewExpense'\n\nconst dummyData = [\n  { id: 'e1', title: 'Internet Bill', amount: 424, date: new Date(2021, 6, 3) },\n  { id: 'e2', title: 'Phone Bill', amount: 212, date: new Date(2021, 6, 3) },\n  { id: 'e3', title: 'Dinner Night: Lasgna', amount: 140, date: new Date(2021, 6, 3) },\n  { id: 'e4', title: 'Dinner: Torpedo Submarine', amount: 90, date: new Date(2021, 6, 3) },\n  { id: 'e5', title: 'Foldable Table', amount: 490, date: new Date(2020, 6, 3) }\n]\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(dummyData);\n\n  const addExpenseHandler = expense => {\n    setExpenses((prevState) => {\n      return [expense, ...prevState];\n    });\n  }\n\n  // console.log(expList);\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expense items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}